- name: install packages
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
  with_items:
    - ca-certificates
    - curl
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: install sudo
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
  with_items:
    - sudo
  when: ansible_distribution == "Debian"

- name: Create the /etc/apt/keyrings directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: 0755
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: download docker keys
  become: true
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0444'

- name: add docker repository to apt
  ansible.builtin.shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" > /etc/apt/sources.list.d/docker.list
  when: ansible_distribution == "Ubuntu"

- name: add docker repository to apt
  become: true
  ansible.builtin.shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  when: ansible_distribution == "Debian"

- name: install docker packages
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: true
  with_items:
    - docker-ce 
    - docker-ce-cli 
    - containerd.io 
    - docker-buildx-plugin 
    - docker-compose-plugin
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: install cgroup packages
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
  with_items:
    - cgroup-lite 
    - cgroup-tools 
    - cgroupfs-mount 
    # - libcgroup1
  when: ansible_distribution == "Ubuntu"

- name: Add docker user
  become: true
  user:
    name: "docker"
    group: "docker"
    shell: /bin/bash
    home: "/home/docker"
    create_home: yes
    state: present

- name: Add SSH public key for docker user
  become: true
  authorized_key:
    user: "docker"
    key: "{{ admin_ssh_public_key }}"
    state: present
